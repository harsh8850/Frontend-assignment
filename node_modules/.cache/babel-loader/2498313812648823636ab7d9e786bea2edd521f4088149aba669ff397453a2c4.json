{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Desktop\\\\Frontend assignment\\\\Frontend assignment\\\\src\\\\components\\\\InputField\\\\InputField.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sizeClasses = {\n  sm: \"px-2 py-1 text-sm\",\n  md: \"px-3 py-2 text-base\",\n  lg: \"px-4 py-3 text-lg\"\n};\nconst variantClasses = {\n  filled: \"bg-gray-100 border border-gray-300\",\n  outlined: \"border border-gray-400\",\n  ghost: \"bg-transparent border-b border-gray-400\"\n};\nexport const InputField = ({\n  value,\n  onChange,\n  label,\n  placeholder,\n  helperText,\n  errorMessage,\n  disabled,\n  invalid,\n  variant = \"outlined\",\n  size = \"md\",\n  type = \"text\",\n  clearable = false,\n  togglePassword = false,\n  theme = \"light\"\n}) => {\n  _s();\n  const [internalValue, setInternalValue] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const currentValue = value !== undefined ? value : internalValue;\n  const handleChange = e => {\n    if (onChange) onChange(e);else setInternalValue(e.target.value);\n  };\n  const handleClear = () => {\n    if (onChange) {\n      onChange({\n        target: {\n          value: \"\"\n        }\n      });\n    } else {\n      setInternalValue(\"\");\n    }\n  };\n  const themeClasses = theme === \"dark\" ? \"bg-gray-800 text-white placeholder-gray-400\" : \"bg-white text-black placeholder-gray-500\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-1 w-full\",\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"font-medium\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: togglePassword ? showPassword ? \"text\" : \"password\" : type,\n        value: currentValue,\n        onChange: handleChange,\n        placeholder: placeholder,\n        disabled: disabled,\n        \"aria-invalid\": invalid,\n        className: `rounded w-full ${sizeClasses[size]} ${variantClasses[variant]} ${themeClasses} ${invalid ? \"border-red-500\" : \"\"} ${disabled ? \"bg-gray-200 cursor-not-allowed\" : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), clearable && currentValue && !disabled && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleClear,\n        className: \"absolute right-2 text-gray-500 hover:text-black\",\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), togglePassword && !disabled && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setShowPassword(prev => !prev),\n        className: \"absolute right-2 text-gray-500 hover:text-black\",\n        children: showPassword ? \"üôà\" : \"üëÅÔ∏è\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), helperText && !invalid && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-xs text-gray-500\",\n      children: helperText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), invalid && errorMessage && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-xs text-red-500\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(InputField, \"op+39nDqOruBmsafcT0MVzH2d+A=\");\n_c = InputField;\n;\nInputField.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"InputField\",\n  \"props\": {\n    \"value\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"signature\",\n        \"type\": \"function\",\n        \"raw\": \"(e: React.ChangeEvent<HTMLInputElement>) => void\",\n        \"signature\": {\n          \"arguments\": [{\n            \"type\": {\n              \"name\": \"ReactChangeEvent\",\n              \"raw\": \"React.ChangeEvent<HTMLInputElement>\",\n              \"elements\": [{\n                \"name\": \"HTMLInputElement\"\n              }]\n            },\n            \"name\": \"e\"\n          }],\n          \"return\": {\n            \"name\": \"void\"\n          }\n        }\n      },\n      \"description\": \"\"\n    },\n    \"label\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"placeholder\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"helperText\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"errorMessage\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"disabled\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\"\n    },\n    \"invalid\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\"\n    },\n    \"variant\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"\\\"filled\\\" | \\\"outlined\\\" | \\\"ghost\\\"\",\n        \"elements\": [{\n          \"name\": \"literal\",\n          \"value\": \"\\\"filled\\\"\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"\\\"outlined\\\"\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"\\\"ghost\\\"\"\n        }]\n      },\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"\\\"outlined\\\"\",\n        \"computed\": false\n      }\n    },\n    \"size\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"\\\"sm\\\" | \\\"md\\\" | \\\"lg\\\"\",\n        \"elements\": [{\n          \"name\": \"literal\",\n          \"value\": \"\\\"sm\\\"\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"\\\"md\\\"\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"\\\"lg\\\"\"\n        }]\n      },\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"\\\"md\\\"\",\n        \"computed\": false\n      }\n    },\n    \"type\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"\\\"text\\\" | \\\"password\\\"\",\n        \"elements\": [{\n          \"name\": \"literal\",\n          \"value\": \"\\\"text\\\"\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"\\\"password\\\"\"\n        }]\n      },\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"\\\"text\\\"\",\n        \"computed\": false\n      }\n    },\n    \"clearable\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      }\n    },\n    \"togglePassword\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      }\n    },\n    \"theme\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"\\\"light\\\" | \\\"dark\\\"\",\n        \"elements\": [{\n          \"name\": \"literal\",\n          \"value\": \"\\\"light\\\"\"\n        }, {\n          \"name\": \"literal\",\n          \"value\": \"\\\"dark\\\"\"\n        }]\n      },\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"\\\"light\\\"\",\n        \"computed\": false\n      }\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","sizeClasses","sm","md","lg","variantClasses","filled","outlined","ghost","InputField","value","onChange","label","placeholder","helperText","errorMessage","disabled","invalid","variant","size","type","clearable","togglePassword","theme","_s","internalValue","setInternalValue","showPassword","setShowPassword","currentValue","undefined","handleChange","e","target","handleClear","themeClasses","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","prev","_c"],"sources":["D:/OneDrive/Desktop/Frontend assignment/Frontend assignment/src/components/InputField/InputField.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport interface InputFieldProps {\n  value?: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  label?: string;\n  placeholder?: string;\n  helperText?: string;\n  errorMessage?: string;\n  disabled?: boolean;\n  invalid?: boolean;\n  variant?: \"filled\" | \"outlined\" | \"ghost\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  type?: \"text\" | \"password\";\n  clearable?: boolean;\n  togglePassword?: boolean;\n  theme?: \"light\" | \"dark\";\n}\n\nconst sizeClasses = {\n  sm: \"px-2 py-1 text-sm\",\n  md: \"px-3 py-2 text-base\",\n  lg: \"px-4 py-3 text-lg\",\n};\n\nconst variantClasses = {\n  filled: \"bg-gray-100 border border-gray-300\",\n  outlined: \"border border-gray-400\",\n  ghost: \"bg-transparent border-b border-gray-400\",\n};\n\nexport const InputField: React.FC<InputFieldProps> = ({\n  value,\n  onChange,\n  label,\n  placeholder,\n  helperText,\n  errorMessage,\n  disabled,\n  invalid,\n  variant = \"outlined\",\n  size = \"md\",\n  type = \"text\",\n  clearable = false,\n  togglePassword = false,\n  theme = \"light\",\n}) => {\n  const [internalValue, setInternalValue] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n\n  const currentValue = value !== undefined ? value : internalValue;\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (onChange) onChange(e);\n    else setInternalValue(e.target.value);\n  };\n\n  const handleClear = () => {\n    if (onChange) {\n      onChange({\n        target: { value: \"\" },\n      } as React.ChangeEvent<HTMLInputElement>);\n    } else {\n      setInternalValue(\"\");\n    }\n  };\n\n  const themeClasses =\n    theme === \"dark\"\n      ? \"bg-gray-800 text-white placeholder-gray-400\"\n      : \"bg-white text-black placeholder-gray-500\";\n\n  return (\n    <div className=\"flex flex-col gap-1 w-full\">\n      {label && <label className=\"font-medium\">{label}</label>}\n      <div className=\"relative flex items-center\">\n        <input\n          type={togglePassword ? (showPassword ? \"text\" : \"password\") : type}\n          value={currentValue}\n          onChange={handleChange}\n          placeholder={placeholder}\n          disabled={disabled}\n          aria-invalid={invalid}\n          className={`rounded w-full ${sizeClasses[size]} ${\n            variantClasses[variant]\n          } ${themeClasses} ${invalid ? \"border-red-500\" : \"\"} ${\n            disabled ? \"bg-gray-200 cursor-not-allowed\" : \"\"\n          }`}\n        />\n\n        {clearable && currentValue && !disabled && (\n          <button\n            type=\"button\"\n            onClick={handleClear}\n            className=\"absolute right-2 text-gray-500 hover:text-black\"\n          >\n            ‚úï\n          </button>\n        )}\n        {togglePassword && !disabled && (\n          <button\n            type=\"button\"\n            onClick={() => setShowPassword((prev) => !prev)}\n            className=\"absolute right-2 text-gray-500 hover:text-black\"\n          >\n            {showPassword ? \"üôà\" : \"üëÅÔ∏è\"}\n          </button>\n        )}\n      </div>\n\n      {helperText && !invalid && (\n        <span className=\"text-xs text-gray-500\">{helperText}</span>\n      )}\n      {invalid && errorMessage && (\n        <span className=\"text-xs text-red-500\">{errorMessage}</span>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
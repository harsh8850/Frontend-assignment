{"ast":null,"code":"var _jsxFileName = \"E:\\\\Frontend assignment\\\\src\\\\components\\\\InputField\\\\InputField.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sizeClasses = {\n  sm: \"px-2 py-1 text-sm\",\n  md: \"px-3 py-2 text-base\",\n  lg: \"px-4 py-3 text-lg\"\n};\nconst variantClasses = {\n  filled: \"bg-gray-100 dark:bg-gray-800 border border-gray-300 dark:border-gray-600\",\n  outlined: \"border border-gray-400 dark:border-gray-600\",\n  ghost: \"bg-transparent border-b border-gray-400 dark:border-gray-600\"\n};\nexport const InputField = ({\n  value,\n  onChange,\n  label,\n  placeholder,\n  helperText,\n  errorMessage,\n  disabled,\n  invalid,\n  variant = \"outlined\",\n  size = \"md\",\n  type = \"text\"\n}) => {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  const inputType = type === \"password\" && showPassword ? \"text\" : type;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col gap-1\",\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"font-medium\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: inputType,\n        value: value,\n        onChange: onChange,\n        placeholder: placeholder,\n        disabled: disabled,\n        \"aria-invalid\": invalid,\n        className: `w-full rounded ${sizeClasses[size]} ${variantClasses[variant]} ${invalid ? \"border-red-500\" : \"\"} ${disabled ? \"bg-gray-200 cursor-not-allowed dark:bg-gray-700\" : \"\"} \n          dark:text-white`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), value && !disabled && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => onChange === null || onChange === void 0 ? void 0 : onChange({\n          target: {\n            value: \"\"\n          }\n        }),\n        className: \"absolute right-2 top-1/2 -translate-y-1/2 text-gray-500 hover:text-black dark:hover:text-white\",\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), type === \"password\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setShowPassword(!showPassword),\n        className: \"absolute right-8 top-1/2 -translate-y-1/2 text-gray-500 hover:text-black dark:hover:text-white\",\n        children: showPassword ? \"üôà\" : \"üëÅ\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), helperText && !invalid && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-xs text-gray-500 dark:text-gray-400\",\n      children: helperText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), invalid && errorMessage && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-xs text-red-500\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(InputField, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n_c = InputField;\nvar _c;\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","sizeClasses","sm","md","lg","variantClasses","filled","outlined","ghost","InputField","value","onChange","label","placeholder","helperText","errorMessage","disabled","invalid","variant","size","type","_s","showPassword","setShowPassword","inputType","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","target","_c","$RefreshReg$"],"sources":["E:/Frontend assignment/src/components/InputField/InputField.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport interface InputFieldProps {\n  value?: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  label?: string;\n  placeholder?: string;\n  helperText?: string;\n  errorMessage?: string;\n  disabled?: boolean;\n  invalid?: boolean;\n  variant?: \"filled\" | \"outlined\" | \"ghost\";\n  size?: \"sm\" | \"md\" | \"lg\";\n  type?: string;\n}\n\nconst sizeClasses = {\n  sm: \"px-2 py-1 text-sm\",\n  md: \"px-3 py-2 text-base\",\n  lg: \"px-4 py-3 text-lg\",\n};\n\nconst variantClasses = {\n  filled:\n    \"bg-gray-100 dark:bg-gray-800 border border-gray-300 dark:border-gray-600\",\n  outlined: \"border border-gray-400 dark:border-gray-600\",\n  ghost: \"bg-transparent border-b border-gray-400 dark:border-gray-600\",\n};\n\nexport const InputField: React.FC<InputFieldProps> = ({\n  value,\n  onChange,\n  label,\n  placeholder,\n  helperText,\n  errorMessage,\n  disabled,\n  invalid,\n  variant = \"outlined\",\n  size = \"md\",\n  type = \"text\",\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const inputType = type === \"password\" && showPassword ? \"text\" : type;\n\n  return (\n    <div className=\"flex flex-col gap-1\">\n      {label && <label className=\"font-medium\">{label}</label>}\n\n      <div className=\"relative\">\n        <input\n          type={inputType}\n          value={value}\n          onChange={onChange}\n          placeholder={placeholder}\n          disabled={disabled}\n          aria-invalid={invalid}\n          className={`w-full rounded ${sizeClasses[size]} ${\n            variantClasses[variant]\n          } ${invalid ? \"border-red-500\" : \"\"} ${\n            disabled ? \"bg-gray-200 cursor-not-allowed dark:bg-gray-700\" : \"\"\n          } \n          dark:text-white`}\n        />\n\n        {/* Clear button (only if there's text and not disabled) */}\n        {value && !disabled && (\n          <button\n            type=\"button\"\n            onClick={() =>\n              onChange?.({\n                target: { value: \"\" },\n              } as React.ChangeEvent<HTMLInputElement>)\n            }\n            className=\"absolute right-2 top-1/2 -translate-y-1/2 text-gray-500 hover:text-black dark:hover:text-white\"\n          >\n            ‚úï\n          </button>\n        )}\n\n        {/* Password toggle (only if type=password) */}\n        {type === \"password\" && (\n          <button\n            type=\"button\"\n            onClick={() => setShowPassword(!showPassword)}\n            className=\"absolute right-8 top-1/2 -translate-y-1/2 text-gray-500 hover:text-black dark:hover:text-white\"\n          >\n            {showPassword ? \"üôà\" : \"üëÅ\"}\n          </button>\n        )}\n      </div>\n\n      {helperText && !invalid && (\n        <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n          {helperText}\n        </span>\n      )}\n      {invalid && errorMessage && (\n        <span className=\"text-xs text-red-500\">{errorMessage}</span>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Desktop\\\\Frontend assignment\\\\Frontend assignment\\\\src\\\\components\\\\DataTable\\\\DataTable.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DataTable({\n  data,\n  columns,\n  loading,\n  selectable,\n  onRowSelect\n}) {\n  _s();\n  const [selectedRows, setSelectedRows] = useState([]);\n  const toggleRow = row => {\n    let updated = [];\n    if (selectedRows.includes(row)) {\n      updated = selectedRows.filter(r => r !== row);\n    } else {\n      updated = [...selectedRows, row];\n    }\n    setSelectedRows(updated);\n    onRowSelect === null || onRowSelect === void 0 ? void 0 : onRowSelect(updated);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  if (!data.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"min-w-full border border-gray-300\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [selectable && /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 26\n        }, this), columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"px-4 py-2 text-left border-b\",\n          children: col.title\n        }, col.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"border-b\",\n        children: [selectable && /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"px-4\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedRows.includes(row),\n            onChange: () => toggleRow(row)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"px-4 py-2\",\n          children: String(row[col.dataIndex])\n        }, col.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this))]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(DataTable, \"kE+zebKPJPLpKtm4LqE61mD+8P8=\");\n_c = DataTable;\n;\nDataTable.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"DataTable\",\n  \"props\": {\n    \"data\": {\n      \"required\": true,\n      \"tsType\": {\n        \"name\": \"Array\",\n        \"elements\": [{\n          \"name\": \"T\"\n        }],\n        \"raw\": \"T[]\"\n      },\n      \"description\": \"\"\n    },\n    \"columns\": {\n      \"required\": true,\n      \"tsType\": {\n        \"name\": \"Array\",\n        \"elements\": [{\n          \"name\": \"Column\",\n          \"elements\": [{\n            \"name\": \"T\"\n          }],\n          \"raw\": \"Column<T>\"\n        }],\n        \"raw\": \"Column<T>[]\"\n      },\n      \"description\": \"\"\n    },\n    \"loading\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\"\n    },\n    \"selectable\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\"\n    },\n    \"onRowSelect\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"signature\",\n        \"type\": \"function\",\n        \"raw\": \"(selectedRows: T[]) => void\",\n        \"signature\": {\n          \"arguments\": [{\n            \"type\": {\n              \"name\": \"Array\",\n              \"elements\": [{\n                \"name\": \"T\"\n              }],\n              \"raw\": \"T[]\"\n            },\n            \"name\": \"selectedRows\"\n          }],\n          \"return\": {\n            \"name\": \"void\"\n          }\n        }\n      },\n      \"description\": \"\"\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DataTable","data","columns","loading","selectable","onRowSelect","_s","selectedRows","setSelectedRows","toggleRow","row","updated","includes","filter","r","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","col","title","key","i","type","checked","onChange","String","dataIndex","_c","__docgenInfo","$RefreshReg$"],"sources":["D:/OneDrive/Desktop/Frontend assignment/Frontend assignment/src/components/DataTable/DataTable.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nexport interface Column<T> {\n  key: string;\n  title: string;\n  dataIndex: keyof T;\n  sortable?: boolean;\n}\n\nexport interface DataTableProps<T> {\n  data: T[];\n  columns: Column<T>[];\n  loading?: boolean;\n  selectable?: boolean;\n  onRowSelect?: (selectedRows: T[]) => void;\n}\n\nexport function DataTable<T>({ data, columns, loading, selectable, onRowSelect }: DataTableProps<T>) {\n  const [selectedRows, setSelectedRows] = useState<T[]>([]);\n\n  const toggleRow = (row: T) => {\n    let updated: T[] = [];\n    if (selectedRows.includes(row)) {\n      updated = selectedRows.filter(r => r !== row);\n    } else {\n      updated = [...selectedRows, row];\n    }\n    setSelectedRows(updated);\n    onRowSelect?.(updated);\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (!data.length) return <div>No data available</div>;\n\n  return (\n    <table className=\"min-w-full border border-gray-300\">\n      <thead className=\"bg-gray-100\">\n        <tr>\n          {selectable && <th></th>}\n          {columns.map(col => (\n            <th key={col.key} className=\"px-4 py-2 text-left border-b\">{col.title}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((row, i) => (\n          <tr key={i} className=\"border-b\">\n            {selectable && (\n              <td className=\"px-4\">\n                <input type=\"checkbox\" checked={selectedRows.includes(row)} onChange={() => toggleRow(row)} />\n              </td>\n            )}\n            {columns.map(col => (\n              <td key={col.key} className=\"px-4 py-2\">{String(row[col.dataIndex])}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
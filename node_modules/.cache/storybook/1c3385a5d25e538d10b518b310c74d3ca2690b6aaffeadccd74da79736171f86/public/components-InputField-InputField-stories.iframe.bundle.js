"use strict";
(globalThis["webpackChunkui_components"] = globalThis["webpackChunkui_components"] || []).push([["components-InputField-InputField-stories"],{

/***/ "./src/components/InputField/InputField.stories.tsx":
/*!**********************************************************!*\
  !*** ./src/components/InputField/InputField.stories.tsx ***!
  \**********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CombinedDemo: () => (/* binding */ CombinedDemo),
/* harmony export */   DarkTheme: () => (/* binding */ DarkTheme),
/* harmony export */   Default: () => (/* binding */ Default),
/* harmony export */   Disabled: () => (/* binding */ Disabled),
/* harmony export */   Invalid: () => (/* binding */ Invalid),
/* harmony export */   PasswordToggle: () => (/* binding */ PasswordToggle),
/* harmony export */   Variants: () => (/* binding */ Variants),
/* harmony export */   WithClearButton: () => (/* binding */ WithClearButton),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _InputField__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InputField */ "./src/components/InputField/InputField.tsx");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "E:\\Frontend assignment\\src\\components\\InputField\\InputField.stories.tsx";


const meta = {
  title: "Components/InputField",
  component: _InputField__WEBPACK_IMPORTED_MODULE_0__.InputField,
  tags: ["autodocs"]
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
const Default = {
  args: {
    label: "Username",
    placeholder: "Enter username",
    helperText: "This is a helper text"
  }
};
const Invalid = {
  args: {
    label: "Email",
    placeholder: "Enter email",
    invalid: true,
    errorMessage: "Invalid email address"
  }
};
const Disabled = {
  args: {
    label: "Password",
    placeholder: "Enter password",
    disabled: true
  }
};
const Variants = {
  render: () => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
    className: "flex flex-col gap-4 w-80",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_InputField__WEBPACK_IMPORTED_MODULE_0__.InputField, {
      label: "Outlined",
      placeholder: "Outlined",
      variant: "outlined"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 41,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_InputField__WEBPACK_IMPORTED_MODULE_0__.InputField, {
      label: "Filled",
      placeholder: "Filled",
      variant: "filled"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 42,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_InputField__WEBPACK_IMPORTED_MODULE_0__.InputField, {
      label: "Ghost",
      placeholder: "Ghost",
      variant: "ghost"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 40,
    columnNumber: 5
  }, undefined)
};
const WithClearButton = {
  args: {
    label: "Search",
    placeholder: "Type something...",
    clearable: true
  }
};
const PasswordToggle = {
  args: {
    label: "Password",
    placeholder: "Enter password",
    togglePassword: true,
    type: "password"
  }
};
const DarkTheme = {
  args: {
    label: "Dark Mode Input",
    placeholder: "Type here...",
    helperText: "Dark theme example",
    theme: "dark",
    variant: "outlined",
    clearable: true
  }
};
const CombinedDemo = {
  render: () => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
    className: "flex flex-col gap-4 w-96",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_InputField__WEBPACK_IMPORTED_MODULE_0__.InputField, {
      label: "Search with Clear",
      placeholder: "Search...",
      clearable: true
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 79,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_InputField__WEBPACK_IMPORTED_MODULE_0__.InputField, {
      label: "Password with Toggle",
      placeholder: "Enter password",
      togglePassword: true,
      type: "password"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 80,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_InputField__WEBPACK_IMPORTED_MODULE_0__.InputField, {
      label: "Dark Mode Search",
      placeholder: "Dark input...",
      clearable: true,
      theme: "dark",
      variant: "outlined"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 86,
      columnNumber: 7
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_InputField__WEBPACK_IMPORTED_MODULE_0__.InputField, {
      label: "Dark Mode Password",
      placeholder: "Enter password",
      togglePassword: true,
      type: "password",
      theme: "dark"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 7
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 78,
    columnNumber: 5
  }, undefined)
};
;
const __namedExportsOrder = ["Default", "Invalid", "Disabled", "Variants", "WithClearButton", "PasswordToggle", "DarkTheme", "CombinedDemo"];
Default.parameters = {
  ...Default.parameters,
  docs: {
    ...Default.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: \"Username\",\n    placeholder: \"Enter username\",\n    helperText: \"This is a helper text\"\n  }\n}",
      ...Default.parameters?.docs?.source
    }
  }
};
Invalid.parameters = {
  ...Invalid.parameters,
  docs: {
    ...Invalid.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: \"Email\",\n    placeholder: \"Enter email\",\n    invalid: true,\n    errorMessage: \"Invalid email address\"\n  }\n}",
      ...Invalid.parameters?.docs?.source
    }
  }
};
Disabled.parameters = {
  ...Disabled.parameters,
  docs: {
    ...Disabled.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: \"Password\",\n    placeholder: \"Enter password\",\n    disabled: true\n  }\n}",
      ...Disabled.parameters?.docs?.source
    }
  }
};
Variants.parameters = {
  ...Variants.parameters,
  docs: {
    ...Variants.parameters?.docs,
    source: {
      originalSource: "{\n  render: () => <div className=\"flex flex-col gap-4 w-80\">\r\n      <InputField label=\"Outlined\" placeholder=\"Outlined\" variant=\"outlined\" />\r\n      <InputField label=\"Filled\" placeholder=\"Filled\" variant=\"filled\" />\r\n      <InputField label=\"Ghost\" placeholder=\"Ghost\" variant=\"ghost\" />\r\n    </div>\n}",
      ...Variants.parameters?.docs?.source
    }
  }
};
WithClearButton.parameters = {
  ...WithClearButton.parameters,
  docs: {
    ...WithClearButton.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: \"Search\",\n    placeholder: \"Type something...\",\n    clearable: true\n  }\n}",
      ...WithClearButton.parameters?.docs?.source
    }
  }
};
PasswordToggle.parameters = {
  ...PasswordToggle.parameters,
  docs: {
    ...PasswordToggle.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: \"Password\",\n    placeholder: \"Enter password\",\n    togglePassword: true,\n    type: \"password\"\n  }\n}",
      ...PasswordToggle.parameters?.docs?.source
    }
  }
};
DarkTheme.parameters = {
  ...DarkTheme.parameters,
  docs: {
    ...DarkTheme.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: \"Dark Mode Input\",\n    placeholder: \"Type here...\",\n    helperText: \"Dark theme example\",\n    theme: \"dark\",\n    variant: \"outlined\",\n    clearable: true\n  }\n}",
      ...DarkTheme.parameters?.docs?.source
    }
  }
};
CombinedDemo.parameters = {
  ...CombinedDemo.parameters,
  docs: {
    ...CombinedDemo.parameters?.docs,
    source: {
      originalSource: "{\n  render: () => <div className=\"flex flex-col gap-4 w-96\">\r\n      <InputField label=\"Search with Clear\" placeholder=\"Search...\" clearable />\r\n      <InputField label=\"Password with Toggle\" placeholder=\"Enter password\" togglePassword type=\"password\" />\r\n      <InputField label=\"Dark Mode Search\" placeholder=\"Dark input...\" clearable theme=\"dark\" variant=\"outlined\" />\r\n      <InputField label=\"Dark Mode Password\" placeholder=\"Enter password\" togglePassword type=\"password\" theme=\"dark\" />\r\n    </div>\n}",
      ...CombinedDemo.parameters?.docs?.source
    }
  }
};

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/InputField/InputField.tsx":
/*!**************************************************!*\
  !*** ./src/components/InputField/InputField.tsx ***!
  \**************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InputField: () => (/* binding */ InputField)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "E:\\Frontend assignment\\src\\components\\InputField\\InputField.tsx",
  _s = __webpack_require__.$Refresh$.signature();


const sizeClasses = {
  sm: "px-2 py-1 text-sm",
  md: "px-3 py-2 text-base",
  lg: "px-4 py-3 text-lg"
};
const variantClasses = {
  filled: "bg-gray-100 border border-gray-300",
  outlined: "border border-gray-400",
  ghost: "bg-transparent border-b border-gray-400"
};
const InputField = ({
  value,
  onChange,
  label,
  placeholder,
  helperText,
  errorMessage,
  disabled,
  invalid,
  variant = "outlined",
  size = "md",
  type = "text",
  clearable = false,
  togglePassword = false,
  theme = "light"
}) => {
  _s();
  const [internalValue, setInternalValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("");
  const [showPassword, setShowPassword] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const currentValue = value !== undefined ? value : internalValue;
  const handleChange = e => {
    if (onChange) onChange(e);else setInternalValue(e.target.value);
  };
  const handleClear = () => {
    if (onChange) {
      onChange({
        target: {
          value: ""
        }
      });
    } else {
      setInternalValue("");
    }
  };
  const themeClasses = theme === "dark" ? "bg-gray-800 text-white placeholder-gray-400" : "bg-white text-black placeholder-gray-500";
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
    className: "flex flex-col gap-1 w-full",
    children: [label && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("label", {
      className: "font-medium",
      children: label
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 75,
      columnNumber: 17
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
      className: "relative flex items-center",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("input", {
        type: togglePassword ? showPassword ? "text" : "password" : type,
        value: currentValue,
        onChange: handleChange,
        placeholder: placeholder,
        disabled: disabled,
        "aria-invalid": invalid,
        className: `rounded w-full ${sizeClasses[size]} ${variantClasses[variant]} ${themeClasses} ${invalid ? "border-red-500" : ""} ${disabled ? "bg-gray-200 cursor-not-allowed" : ""}`
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 77,
        columnNumber: 9
      }, undefined), clearable && currentValue && !disabled && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("button", {
        type: "button",
        onClick: handleClear,
        className: "absolute right-2 text-gray-500 hover:text-black",
        children: "\u2715"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 92,
        columnNumber: 11
      }, undefined), togglePassword && !disabled && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("button", {
        type: "button",
        onClick: () => setShowPassword(prev => !prev),
        className: "absolute right-2 text-gray-500 hover:text-black",
        children: showPassword ? "🙈" : "👁️"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 101,
        columnNumber: 11
      }, undefined)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 76,
      columnNumber: 7
    }, undefined), helperText && !invalid && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("span", {
      className: "text-xs text-gray-500",
      children: helperText
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 112,
      columnNumber: 9
    }, undefined), invalid && errorMessage && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("span", {
      className: "text-xs text-red-500",
      children: errorMessage
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 9
    }, undefined)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 74,
    columnNumber: 5
  }, undefined);
};
_s(InputField, "op+39nDqOruBmsafcT0MVzH2d+A=");
_c = InputField;
;
InputField.__docgenInfo = {
  "description": "",
  "methods": [],
  "displayName": "InputField",
  "props": {
    "value": {
      "required": false,
      "tsType": {
        "name": "string"
      },
      "description": ""
    },
    "onChange": {
      "required": false,
      "tsType": {
        "name": "signature",
        "type": "function",
        "raw": "(e: React.ChangeEvent<HTMLInputElement>) => void",
        "signature": {
          "arguments": [{
            "type": {
              "name": "ReactChangeEvent",
              "raw": "React.ChangeEvent<HTMLInputElement>",
              "elements": [{
                "name": "HTMLInputElement"
              }]
            },
            "name": "e"
          }],
          "return": {
            "name": "void"
          }
        }
      },
      "description": ""
    },
    "label": {
      "required": false,
      "tsType": {
        "name": "string"
      },
      "description": ""
    },
    "placeholder": {
      "required": false,
      "tsType": {
        "name": "string"
      },
      "description": ""
    },
    "helperText": {
      "required": false,
      "tsType": {
        "name": "string"
      },
      "description": ""
    },
    "errorMessage": {
      "required": false,
      "tsType": {
        "name": "string"
      },
      "description": ""
    },
    "disabled": {
      "required": false,
      "tsType": {
        "name": "boolean"
      },
      "description": ""
    },
    "invalid": {
      "required": false,
      "tsType": {
        "name": "boolean"
      },
      "description": ""
    },
    "variant": {
      "required": false,
      "tsType": {
        "name": "union",
        "raw": "\"filled\" | \"outlined\" | \"ghost\"",
        "elements": [{
          "name": "literal",
          "value": "\"filled\""
        }, {
          "name": "literal",
          "value": "\"outlined\""
        }, {
          "name": "literal",
          "value": "\"ghost\""
        }]
      },
      "description": "",
      "defaultValue": {
        "value": "\"outlined\"",
        "computed": false
      }
    },
    "size": {
      "required": false,
      "tsType": {
        "name": "union",
        "raw": "\"sm\" | \"md\" | \"lg\"",
        "elements": [{
          "name": "literal",
          "value": "\"sm\""
        }, {
          "name": "literal",
          "value": "\"md\""
        }, {
          "name": "literal",
          "value": "\"lg\""
        }]
      },
      "description": "",
      "defaultValue": {
        "value": "\"md\"",
        "computed": false
      }
    },
    "type": {
      "required": false,
      "tsType": {
        "name": "union",
        "raw": "\"text\" | \"password\"",
        "elements": [{
          "name": "literal",
          "value": "\"text\""
        }, {
          "name": "literal",
          "value": "\"password\""
        }]
      },
      "description": "",
      "defaultValue": {
        "value": "\"text\"",
        "computed": false
      }
    },
    "clearable": {
      "required": false,
      "tsType": {
        "name": "boolean"
      },
      "description": "",
      "defaultValue": {
        "value": "false",
        "computed": false
      }
    },
    "togglePassword": {
      "required": false,
      "tsType": {
        "name": "boolean"
      },
      "description": "",
      "defaultValue": {
        "value": "false",
        "computed": false
      }
    },
    "theme": {
      "required": false,
      "tsType": {
        "name": "union",
        "raw": "\"light\" | \"dark\"",
        "elements": [{
          "name": "literal",
          "value": "\"light\""
        }, {
          "name": "literal",
          "value": "\"dark\""
        }]
      },
      "description": "",
      "defaultValue": {
        "value": "\"light\"",
        "computed": false
      }
    }
  }
};
var _c;
__webpack_require__.$Refresh$.register(_c, "InputField");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

}]);
//# sourceMappingURL=components-InputField-InputField-stories.iframe.bundle.js.map